---
import type { Author } from "../types/types";

interface Props {
  authors: Author[];
}

const { authors } = Astro.props;

// Create a mapping of institutions to indices
const institutionMap = new Map();
let institutionIndex = 1;
const authorsWithIndices = authors.map((author) => {
  if (!institutionMap.has(author.institution)) {
    institutionMap.set(author.institution, institutionIndex);
    institutionIndex++;
  }
  return {
    ...author,
    institutionIndex: institutionMap.get(author.institution),
  };
});

// Extract institution names and their indices
const institutions = Array.from(institutionMap.entries());
---
<style>
  /* Define a font family for the entire component */
  .custom-font {
    font-family: 'Roboto', sans-serif;
  }

  /* Style for author name */
  .author-name {
    font-weight: bold;
    font-size: 1.2rem;
  }

  /* Style for superscript to reduce space */
  .superscript {
    font-size: 0.8rem;
    vertical-align: super;
    margin-left: 0.2rem; /* Adjust the distance between author name and superscript */
  }

  /* Styling for institutions displayed in a row */
  .institution-list {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }

  .institution {
    font-size: 1rem;
    font-weight: normal;
  }

  .institution-superscript {
    font-size: 0.8rem;
    vertical-align: super;
    margin-left: 0.2rem; /* Adjust space between index and institution */
  }
</style>

<div class="text-center">
  <!-- Render all authors in one line with institution indices as superscript -->
  <div class="flex justify-center flex-wrap gap-x-8 gap-y-4">
    {
      authorsWithIndices.map((author) => (
        <div class="flex flex-col items-center">
          <span class="author-name">
            {author.url ? (
              <a href={author.url} class="hover:underline">
                {author.name}
              </a>
            ) : (
              author.name
            )}
            {author.institution && (
              <sup class="superscript">{author.institutionIndex}</sup>
            )}
          </span>
        </div>
      ))}
  </div>

  <!-- Display the institution list in a row -->
  <div class="institution-list">
    {institutions.map(([institution, index]) => (
      <div class="institution">
        <span class="institution-superscript">{index}</span>{institution}
      </div>
    ))}
  </div>
</div>
