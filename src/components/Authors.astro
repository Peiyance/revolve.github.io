---
import type { Author } from "../types/types";

interface Props {
  authors: Author[];
}

const { authors } = Astro.props;

// Create a mapping of institutions to indices
const institutionMap = new Map();
let institutionIndex = 1;
const authorsWithIndices = authors.map((author) => {
  if (!institutionMap.has(author.institution)) {
    institutionMap.set(author.institution, institutionIndex);
    institutionIndex++;
  }
  return {
    ...author,
    institutionIndex: institutionMap.get(author.institution),
  };
});

// Extract institution names and their indices
const institutions = Array.from(institutionMap.entries());
---
<style>
  /* Define a font family for the entire component */
  .custom-font {
    font-family: 'Roboto', sans-serif;
  }

  /* Define specific font styles for individual elements */
  h1 {
    font-family: 'Roboto', sans-serif;
    font-weight: bold;
    color: #333; /* Example color */
  }

  p {
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
    color: #666; /* Example color */
  }

  .institution {
    display: flex;
    align-items: center;
    font-size: 16px;
  }

  .institution-index {
    font-size: 14px;
    color: #888;
    margin-right: 8px;
    vertical-align: super;
  }

  .author {
    font-size: 16px;
  }

  .author-index {
    font-size: 12px;
    color: #888;
    margin-left: 5px;
    vertical-align: super;
  }
</style>

<div class="text-center">
  <!-- Render all authors in one line with institution indices as superscript -->
  <div class="flex justify-center flex-wrap gap-x-8 gap-y-4">
    {
      authorsWithIndices.map((author) => (
        <div class="flex flex-col items-center">
          <span class="author">
            {author.url ? (
              <a href={author.url} class="hover:underline">
                {author.name}
              </a>
            ) : (
              author.name
            )}
            {author.institution && (
              <sup class="author-index">{author.institutionIndex}</sup>
            )}
          </span>
        </div>
      ))
    }
  </div>

  <!-- Render institutions with their indices as superscripts on a separate line -->
  <div class="mt-8">
    {institutions.map(([institution, index]) => (
      <div class="institution">
        <sup class="institution-index">{index}</sup>
        <span>{institution}</span>
      </div>
    ))}
  </div>
</div>
