---
import type { Author } from "../types/types";

interface Props {
  authors: Author[];
}

const { authors } = Astro.props;

// Create a mapping of institutions to indices
const institutionMap = new Map();
let institutionIndex = 1;
const authorsWithIndices = authors.map((author) => {
  if (!institutionMap.has(author.institution)) {
    institutionMap.set(author.institution, institutionIndex);
    institutionIndex++;
  }
  return {
    ...author,
    institutionIndex: institutionMap.get(author.institution),
  };
});

// Remove duplicated institution names
const uniqueInstitutions = authors
  .map(author => author.institution)
  .filter((institution, index, self) => self.indexOf(institution) === index);
---

<style>
  /* Define a custom font style for author names */
  .author-name {
    font-family: 'Cinzel Decorative', sans-serif;
    font-weight: bold;
    font-size: 18px;
    color: #333; /* Example color */
  }

  /* Define a custom font style for institution text */
  .institution-text {
    font-family: 'Roboto', sans-serif;
    font-size: 14px;
    color: #666; /* Example color */
  }
</style>

<div class="text-center">
  <!-- Render all authors with institution indices -->
  <div class="flex justify-center flex-wrap gap-x-8 gap-y-4">
    {
      authorsWithIndices.map((author, index) => (
        <div class="flex flex-col items-center">
          <span class="text-lg font-semibold author-name">
            {author.url ? (
              <a href={author.url} class="hover:underline">
                {author.name}
              </a>
            ) : (
              author.name
            )}
            {author.institution && (
              <sup class="text-sm text-gray-500 ml-2">{author.institutionIndex}</sup>
            )}
          </span>
        </div>
      ))
    }
  </div>

  <!-- Render unique institutions with their indices on a separate line -->
  <p class="text-lg mt-4">
    {
      uniqueInstitutions.map((institution, index) => (
        <span key={index} class="text-md institution-text">
          <sup class="text-sm text-gray-500">{institutionMap.get(institution)}</sup> {institution}
          {index < uniqueInstitutions.length - 1 && <span class="mr-4"/>}
        </span>
      ))
    }
  </p>
</div>
